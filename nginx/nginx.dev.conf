upstream frontend_app {
    server notification_front_dev:8000;
}

upstream rapi_app {
    server notificationrapidev:8001;
}

# upstream notification_pgadmin_dev_app {
#     server notification_pgadmin_dev:80;
# }

server {

    listen 80;

    add_header Access-Control-Allow-Origin "https://pullstream.com/" always;
    add_header Access-Control-Allow-Origin "https://*.pullstream.com/" always;
    add_header Access-Control-Allow-Origin "https://mazards.com/" always;
    add_header Access-Control-Allow-Origin "https://*.mazards.com/" always;
    add_header Access-Control-Allow-Origin "https://evchargingsolutions.co.uk/" always;
    add_header Access-Control-Allow-Origin "https://*.evchargingsolutions.co.uk/" always;
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept" always;
    add_header Access-Control-Allow-Methods "FETCH, GET, POST, PUT, OPTIONS, DELETE" always;

    # https://serverfault.com/questions/350330/nginx-add-header-adding-multiple-headers
    # Access-Control-Allow-Origin: http://dev.anuary.com, https://dev.anuary.com

    # $http_origin ~* (example\.com$|localhost$)
    # if ($http_origin ~* "^https?://dev\.anuary\.com$" ) {
    #     add_header Access-Control-Allow-Origin $http_origin;
    # }
    
    # Allow all domains
    # header('Access-Control-Allow-Origin: *');

    # Frontend API Configuration
    location / {
        proxy_pass http://frontend_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # location /static/ {
    #     alias /home/app/web/staticfiles/;
    # }

    # location /media/ {
    #     alias /home/app/web/mediafiles/;
    # }

    # Rest API Configuration
    location /api/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://rapi_app/api/;
        proxy_ssl_session_reuse off;
        # proxy_set_header Host $http_host;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
    
    # location /api/static/ {
    #     alias /home/app/rapi/staticfiles/;
    #     # root /home/app/rapi/staticfiles;
    # }

    # location /api/media/ {
    #     alias /home/app/rapi/mediafiles/;
    # }

    # location /pgadmin/ {
    #     proxy_pass http://notification_pgadmin_dev_app/;
    # }

    # For Certbot for HTTP-01 challenges to verify your domain with Letâ€™s Encrypt and provision or renew TLS certificates.
    location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    # noti_rabbitmq_dev
    
    # location /rabbitmq {
    #         try_files $uri $uri/ @rabbitmq;
    # }

    # location @rabbitmq {
    #     proxy_pass http://noti_rabbitmq_dev:15672/;
    #     proxy_redirect      off;
    #     proxy_set_header    Host                    $host;
    #     proxy_set_header    X-Real-IP               $remote_addr;
    #     proxy_set_header    X-Forwarded-For         $proxy_add_x_forwarded_for;
    #     proxy_set_header    X-Forwarded-Proto       $scheme;
    #     proxy_set_header    X-Script-Name           /rabbitmq;
    # }
}

# if ($host = example.com) {
#     return 301 https://$host$request_uri;
# } # managed by Certbot

# location / {
#     # First attempt to serve request as file, then
#     # as directory, then fall back to displaying a 404.
#     try_files $uri $uri/ /index.php?$args;
# }

# proxy_set_header   X-Forwarded-Proto $scheme;
# proxy_set_header   Host              $http_host;
# proxy_set_header   X-Real-IP         $remote_addr;
# proxy_pass http://frontend_app;

# rewrite /wp-admin$ $scheme://$host$uri/ permanent;

# https://www.digitalocean.com/community/tutorials/how-to-create-temporary-and-permanent-redirects-with-nginx
# rewrite ^/oldlocation$ http://www.newdomain.com/newlocation permanent;
